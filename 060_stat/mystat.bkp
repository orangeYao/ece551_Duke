#include <sys/types.h>
#include <sys/stat.h>
#include <time.h>
#include <stdio.h>
#include <stdlib.h>
#include <ctype.h>
#include <pwd.h>
#include <grp.h>
#include <unistd.h>
//This function is for Step 4
char * time2str(const time_t * when, long ns) {
  char * ans = malloc(128 * sizeof(*ans));
  char temp1[64];
  char temp2[32];
  const struct tm * t= localtime(when);
  strftime(temp1,512,"%Y-%m-%d %H:%M:%S",t);  
  strftime(temp2,32,"%z",t);
  snprintf(ans,128,"%s.%09ld %s", temp1, ns, temp2);
  return ans;
}

int main(int argc, char ** argv)
{
  struct stat sb;
  if (argc != 2)
  {
    perror("Argument number unequal to 1~");
    return EXIT_FAILURE;
  }

   if (stat(argv[1], &sb) == -1) {
       fprintf(stderr, "stat: cannot stat '%s': ", argv[1]);
       perror ("");
       exit(EXIT_FAILURE);
   }

   const char * file_type;

   switch (sb.st_mode & S_IFMT) {
   case S_IFBLK:  file_type = "block device\n";            break;
   case S_IFCHR:  file_type = "character device\n";        break;
   case S_IFDIR:  file_type = "directory\n";               break;
   case S_IFIFO:  file_type = "FIFO/pipe\n";               break;
   case S_IFLNK:  file_type = "symlink\n";                 break;
   case S_IFREG:  file_type = "regular file\n";            break;
   case S_IFSOCK: file_type = "socket\n";                  break;
   default:       file_type = "unknown?\n";                break;
   }

   printf("I-node number:            %ld\n", (long) sb.st_ino);

   printf("Mode:                     %lo (octal)\n",
           (unsigned long) sb.st_mode);

   printf("Link count:               %ld\n", (long) sb.st_nlink);
   printf("Ownership:                UID=%ld   GID=%ld\n",
           (long) sb.st_uid, (long) sb.st_gid);

   printf("Preferred I/O block size: %ld bytes\n",
           (long) sb.st_blksize);
   printf("File size:                %lld bytes\n",
           (long long) sb.st_size);
   printf("Blocks allocated:         %lld\n",
           (long long) sb.st_blocks);

   printf("Last status change:       %s", ctime(&sb.st_ctime));
   printf("Last file access:         %s", ctime(&sb.st_atime));
   printf("Last file modification:   %s", ctime(&sb.st_mtime));


   printf("  File: '%s'\n", argv[1]);
   printf("  Size: %-10lu\tBlocks: %-10lu IO Block: %-6lu %s\n", 
            (long) sb.st_size,
            (long) sb.st_blocks,
            (long) sb.st_blksize,
            file_type);



   exit(EXIT_SUCCESS);
}
